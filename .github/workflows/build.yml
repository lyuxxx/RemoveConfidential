name: Build and Package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: macos-latest
    outputs:
      VERSION: ${{steps.set.outputs.VERSION}}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Install Theos
        run: bash -c "$(curl -fsSL https://raw.githubusercontent.com/roothide/theos/master/bin/install-theos)"

      - name: Setup Environment
        id: set
        run: |
          VERSION=$(awk -F': ' '/^Version:/ {print $2}' control)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "THEOS=~/theos" >> $GITHUB_ENV

      - name: Make Package
        run: make package

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: com.flame.removeconfidential_${{ env.VERSION }}_iphoneos-arm64.deb
          path: ./packages/com.flame.removeconfidential_${{ env.VERSION }}_iphoneos-arm64.deb

  update-release:
    name: Release
    runs-on: ubuntu-latest
    needs: build
    env:
      VERSION: ${{needs.build.outputs.VERSION}}
    steps:
      - name: Delete old release
        uses: dev-drprasad/delete-tag-and-release@v0.2.1
        with:
          delete_release: true
          tag_name: ${{ env.VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get artifacts
        uses: actions/download-artifact@v3
        with:
          name: com.flame.removeconfidential_${{ env.VERSION }}_iphoneos-arm64.deb

      - name: Create new release
        uses: ncipollo/release-action@v1
        with:
          name: Release ${{ env.VERSION }}
          body: These are automatically updated builds of the latest commit.
          artifacts: com.flame.removeconfidential_${{ env.VERSION }}_iphoneos-arm64.deb
          tag: ${{ env.VERSION }}
          token: ${{ secrets.GITHUB_TOKEN }}
